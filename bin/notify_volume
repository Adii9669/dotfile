#!/bin/bash

function send_notification() {
  vol_info=$(wpctl get-volume @DEFAULT_SINK@)
  vol=$(echo "$vol_info" | awk '{printf "%.0f\n", $2 * 100}')
  muted=$(echo "$vol_info" | grep -o '\[MUTED\]')

  # Select icon based on volume level
  if [ -n "$muted" ]; then
    icon="Û∞ùü"  # Muted icon
  elif [ "$vol" -eq 0 ]; then
    icon="Û∞ñÅ "
  elif [ "$vol" -le 30 ]; then
    icon="Û∞ïø "
  elif [ "$vol" -le 70 ]; then
    icon="Û∞ñÄ "
  else
    icon="Û∞ïæ "
  fi

  dunstify -a "ChangeVol" -u low -r 6969 -h int:value:"$vol" "$icon Volume ${vol}%" -t 2000
}


case $1 in 
  up)
    # Get current volume
    vol=$(wpctl get-volume @DEFAULT_SINK@ | awk '{printf "%.0f\n", $2 * 100}')
    
    # Only increase if volume is below 100%
    if [ "$vol" -lt 100 ]; then
      wpctl set-volume @DEFAULT_SINK@ 5%+
    fi
    send_notification
    ;;
    
  down)
    wpctl set-volume @DEFAULT_SINK@ 5%-
    send_notification
    ;;
    
  mute)
    wpctl set-mute @DEFAULT_SINK@ toggle
    send_notification
    ;;
    
  *)
    echo "Usage: $0 {up|down|mute}"
    exit 1
    ;;
esac

# How It Works:
#
#     Before increasing the volume, it checks if the volume is below 100%.
#     If the volume is already at 100%, it does not increase further.
#     The mute icon changes dynamically based on volume level.
#
# This ensures your volume will never exceed 100%. üöÄ Let me know if you need more tweaks!
#

